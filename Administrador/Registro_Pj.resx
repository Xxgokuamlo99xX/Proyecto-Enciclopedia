<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ColorDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="OpenFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>166, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>